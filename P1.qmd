---
title: "Taller 1"
---

## Introducción

En RStudio podemos tener varias ventanas que nos permiten tener más control de nuestro "ambiente", el historial, los "scripts" o códigos que escribimos y por supuesto, tenemos nuestra consola, que también tiene el símbolo "\>" con R. Podemos pedir operaciones básicas

```{r 2}
2+5
5*3

#Para escribir comentarios y que no los lea como operaciones ponemos el símbolo de gato
# Lo podemos hacer para un comentario en una línea o la par de una instrucción
1:5               # Secuencia 1-5

seq(1, 10, 0.5)   # Secuencia con incrementos diferentes a 1

c('a','b','c')  # Vector con caracteres
1:7             # Entero
40<80           # Valor logico
2+2 == 5        # Valor logico
T == TRUE       # T expresion corta de verdadero

```

R es un lenguaje de programación por objetos. Por lo cual vamos a tener objetos a los que se les asigna su contenido. Si usamos una flechita "\<-" o "-\>" le estamos asignando algo al objeto que apunta la felcha.

```{r}
x <- 24         # Asignacion de valor 24 a la variable x para su uso posterior (OBJETO)
x/2             # Uso posterior de variable u objeto x
x               # Imprime en pantalla el valor de la variable u objeto
x <- TRUE       # Asigna el valor logico TRUE a la variable x OJO: x toma el ultimo valor que se le asigna
x
```


## Importando la base 

```{r}

load("datos/endireh2021_pegadaCDMX.RData")

```

Vamos a revisarla...

```{r}

names(endireh2021_CDMX) # nos da los nombres
```


```{r}
head(endireh2021_CDMX) # 6 lineas
```


## Paquete `{skimr}`

Vamos a instalar un paquete. Esto se puede hacer con menús

```
install.packages("skimr")
```

Cargamos el paquete
```{r}
library(skimr)
```


```{r}
skimr::skim(endireh2021_CDMX)
```

## Paquete `{dplyr}`

```
install.packages("dplyr")
```

Cargamos el paquete
```{r}
library(dplyr)
```


```{r}
dplyr::glimpse(endireh2021_CDMX)
```

## Pipes o tuberías


R utiliza dos pipes el nativo `|>` y el pipe que está en `{dplyr}` `%>%`. 

{{< tweet user=ArthurWelle id=535429654760284161 >}}


Algunas de las diferencias las puedes checar acá <https://eliocamp.github.io/codigo-r/2021/05/r-pipa-nativa/>

En estas prácticas utilizaremos el segundo, pero son muy parecidos y para que esta instructora recicle algunos de sus códigos viejos. Pero funcionan igual:

```{r}
endireh2021_CDMX |> #pipe nativo, no necesita instalación
  head()
```

```{r}
endireh2021_CDMX  %>%  #pipe de dplyr, necesita instalación de dplyr en tidyverse
  head()
```


